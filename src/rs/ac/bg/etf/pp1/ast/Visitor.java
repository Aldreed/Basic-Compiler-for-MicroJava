// generated with ast extension for cup
// version 0.8
// 18/7/2022 22:25:33


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(MethodDecl MethodDecl);
    public void visit(Mulop Mulop);
    public void visit(FormParsSingle FormParsSingle);
    public void visit(VarIdentDecls VarIdentDecls);
    public void visit(DuDe DuDe);
    public void visit(Relop Relop);
    public void visit(StatementList StatementList);
    public void visit(FormParsDeclList FormParsDeclList);
    public void visit(ConstMulDecl ConstMulDecl);
    public void visit(Addop Addop);
    public void visit(DeclListPart DeclListPart);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(TermFactorList TermFactorList);
    public void visit(CondFactList CondFactList);
    public void visit(ConstSingleDecl ConstSingleDecl);
    public void visit(DesignatorIdentList DesignatorIdentList);
    public void visit(FormParsMultipleList FormParsMultipleList);
    public void visit(ConstIdentDecls ConstIdentDecls);
    public void visit(DeclList DeclList);
    public void visit(Designator Designator);
    public void visit(Term Term);
    public void visit(Condition Condition);
    public void visit(DesignatorAssignOp DesignatorAssignOp);
    public void visit(Statements Statements);
    public void visit(ActParsList ActParsList);
    public void visit(OptArgsList OptArgsList);
    public void visit(ExprTermList ExprTermList);
    public void visit(VarDeclList VarDeclList);
    public void visit(Expr Expr);
    public void visit(ConditionTermList ConditionTermList);
    public void visit(DesignatorIdentListPart DesignatorIdentListPart);
    public void visit(ActPars ActPars);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(ProgName ProgName);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(VName vName);
    public void visit(ConstDecl ConstDecl);
    public void visit(ClassDecl ClassDecl);
    public void visit(CondFact CondFact);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(OptArgs OptArgs);
    public void visit(OptArg OptArg);
    public void visit(SingleStatement SingleStatement);
    public void visit(ConstMulDeclList ConstMulDeclList);
    public void visit(FormPars FormPars);
    public void visit(FormParsMultiple FormParsMultiple);
    public void visit(MulopMOD MulopMOD);
    public void visit(MulopDIV MulopDIV);
    public void visit(MulopMUL MulopMUL);
    public void visit(AddopMINUS AddopMINUS);
    public void visit(AddopPLUS AddopPLUS);
    public void visit(RelopLLTEQ RelopLLTEQ);
    public void visit(RelopLLT RelopLLT);
    public void visit(RelopLGTEQ RelopLGTEQ);
    public void visit(RelopLGT RelopLGT);
    public void visit(RelopLNEQ RelopLNEQ);
    public void visit(RelopLEQ RelopLEQ);
    public void visit(Assignop Assignop);
    public void visit(Label Label);
    public void visit(DesignatorArr DesignatorArr);
    public void visit(DesignatorDot DesignatorDot);
    public void visit(DesignatorThis DesignatorThis);
    public void visit(DesignatorIdent DesignatorIdent);
    public void visit(FactorBracketsExpr FactorBracketsExpr);
    public void visit(FactorNewArr FactorNewArr);
    public void visit(FactorNew FactorNew);
    public void visit(FactorBoolConst FactorBoolConst);
    public void visit(FactorCharConst FactorCharConst);
    public void visit(FactorNumConst FactorNumConst);
    public void visit(FactorFuncActPars FactorFuncActPars);
    public void visit(FactorFunc FactorFunc);
    public void visit(FactorClass FactorClass);
    public void visit(NoTermFactorList NoTermFactorList);
    public void visit(TermFactorListClass TermFactorListClass);
    public void visit(TermMultiple TermMultiple);
    public void visit(TermSingle TermSingle);
    public void visit(TermStart TermStart);
    public void visit(NoExprTermList NoExprTermList);
    public void visit(ExprTermListClass ExprTermListClass);
    public void visit(MinusExprMultiple MinusExprMultiple);
    public void visit(MinusExpr MinusExpr);
    public void visit(ExpressionMultiple ExpressionMultiple);
    public void visit(ExpressionSingle ExpressionSingle);
    public void visit(MinusExprStart MinusExprStart);
    public void visit(ExprStart ExprStart);
    public void visit(CondFactRelop CondFactRelop);
    public void visit(ConditionFact ConditionFact);
    public void visit(NoCondFactList NoCondFactList);
    public void visit(CondFactListClass CondFactListClass);
    public void visit(CondTermMultiple CondTermMultiple);
    public void visit(CondTermSingle CondTermSingle);
    public void visit(NoConditionTermList NoConditionTermList);
    public void visit(ConditionTermListClass ConditionTermListClass);
    public void visit(ConditionError ConditionError);
    public void visit(ConditionMultiple ConditionMultiple);
    public void visit(ConditionSingle ConditionSingle);
    public void visit(BracketCheck BracketCheck);
    public void visit(OrCheck OrCheck);
    public void visit(NoActParsList NoActParsList);
    public void visit(ActualParsList ActualParsList);
    public void visit(ActParsMultiple ActParsMultiple);
    public void visit(ActParsSingle ActParsSingle);
    public void visit(ActParsStart ActParsStart);
    public void visit(DesignatorAssignOpDerived1 DesignatorAssignOpDerived1);
    public void visit(AssignOpDesignator AssignOpDesignator);
    public void visit(DesignatorStatementDec DesignatorStatementDec);
    public void visit(DesignatorStatementInc DesignatorStatementInc);
    public void visit(DesignatorStatementFunctActPars DesignatorStatementFunctActPars);
    public void visit(DesignatorStatementSuperCalActPars DesignatorStatementSuperCalActPars);
    public void visit(DesignatorStatementSuperCal DesignatorStatementSuperCal);
    public void visit(DesignatorStatementFunct DesignatorStatementFunct);
    public void visit(DesignatorStatementAssignop DesignatorStatementAssignop);
    public void visit(StatementsActual StatementsActual);
    public void visit(PrintArgsSingleStatement PrintArgsSingleStatement);
    public void visit(PrintSingleStatement PrintSingleStatement);
    public void visit(ReadSingleStatement ReadSingleStatement);
    public void visit(ReturnVarSingleStatement ReturnVarSingleStatement);
    public void visit(ReturnSingleStatement ReturnSingleStatement);
    public void visit(ContinueSingleStatement ContinueSingleStatement);
    public void visit(BreakSingleStatement BreakSingleStatement);
    public void visit(DoWhileSingleStatement DoWhileSingleStatement);
    public void visit(IfElseSingleStatement IfElseSingleStatement);
    public void visit(IfSingleStatement IfSingleStatement);
    public void visit(DesignatorSingleStatement DesignatorSingleStatement);
    public void visit(WhileCheck WhileCheck);
    public void visit(ElseIni ElseIni);
    public void visit(IfIni IfIni);
    public void visit(DoWhileStart DoWhileStart);
    public void visit(StatementsClass StatementsClass);
    public void visit(SingleStatementClass SingleStatementClass);
    public void visit(Type Type);
    public void visit(OptArgBOOLCONST OptArgBOOLCONST);
    public void visit(OptArgCHARCONST OptArgCHARCONST);
    public void visit(OptArgNUMCONST OptArgNUMCONST);
    public void visit(SingleOptArg SingleOptArg);
    public void visit(OptArgsMultiple OptArgsMultiple);
    public void visit(NoOptArg NoOptArg);
    public void visit(OptArgsExistsCOMMA OptArgsExistsCOMMA);
    public void visit(OptArgsExists OptArgsExists);
    public void visit(FormParsMultipleDerived1 FormParsMultipleDerived1);
    public void visit(NoFormParsMultiple NoFormParsMultiple);
    public void visit(FormParsMultipleParams FormParsMultipleParams);
    public void visit(FormParsSingleARR FormParsSingleARR);
    public void visit(FormParsSingleVAR FormParsSingleVAR);
    public void visit(SingleFormPars SingleFormPars);
    public void visit(MStartVoid MStartVoid);
    public void visit(MStart MStart);
    public void visit(MethodDeclVoidParams MethodDeclVoidParams);
    public void visit(MethodDeclParams MethodDeclParams);
    public void visit(MethodDeclVoidNoParams MethodDeclVoidNoParams);
    public void visit(MethodDeclNoParams MethodDeclNoParams);
    public void visit(NoStatementList NoStatementList);
    public void visit(StatementListClass StatementListClass);
    public void visit(ConstructorDecl ConstructorDecl);
    public void visit(RecordDecl RecordDecl);
    public void visit(NoMethodDeclList NoMethodDeclList);
    public void visit(MethodDeclarationList MethodDeclarationList);
    public void visit(NoVarDeclList NoVarDeclList);
    public void visit(VariableDeclList VariableDeclList);
    public void visit(ExtendsType ExtendsType);
    public void visit(ClassName ClassName);
    public void visit(ClassDeclExtendsMethodConstr ClassDeclExtendsMethodConstr);
    public void visit(ClassDeclExtendsMethod ClassDeclExtendsMethod);
    public void visit(ClassDeclExtends ClassDeclExtends);
    public void visit(ClassDeclMethodConstr ClassDeclMethodConstr);
    public void visit(ClassDeclMethod ClassDeclMethod);
    public void visit(ClassDeclaration ClassDeclaration);
    public void visit(NoVarIdentDecls NoVarIdentDecls);
    public void visit(VarIdentDeclsArr VarIdentDeclsArr);
    public void visit(VarIdentDeclsVar VarIdentDeclsVar);
    public void visit(VNameArr VNameArr);
    public void visit(VNameAct VNameAct);
    public void visit(VarDeclDerived2 VarDeclDerived2);
    public void visit(VarDeclDerived1 VarDeclDerived1);
    public void visit(VariableDecl VariableDecl);
    public void visit(ConstIdentDeclsDerived1 ConstIdentDeclsDerived1);
    public void visit(NoConstIdenDecals NoConstIdenDecals);
    public void visit(ConstIdentDecalsBoolConst ConstIdentDecalsBoolConst);
    public void visit(ConstIdentDecalsCharConst ConstIdentDecalsCharConst);
    public void visit(ConstIdentDecalsNumConst ConstIdentDecalsNumConst);
    public void visit(ConstDeclMul ConstDeclMul);
    public void visit(ConstDeclSingleBOOL ConstDeclSingleBOOL);
    public void visit(ConstDeclSingleCHAR ConstDeclSingleCHAR);
    public void visit(ConstDeclSingleNUM ConstDeclSingleNUM);
    public void visit(PartDeclListRecord PartDeclListRecord);
    public void visit(PartDeclListClass PartDeclListClass);
    public void visit(PartDeclListVar PartDeclListVar);
    public void visit(PartDeclListConst PartDeclListConst);
    public void visit(NoDeclList NoDeclList);
    public void visit(DeclarationList DeclarationList);
    public void visit(ProgramName ProgramName);
    public void visit(Program Program);

}
